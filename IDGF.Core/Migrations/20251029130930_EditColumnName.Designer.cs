// <auto-generated />
using System;
using IDGF.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDGF.Core.Migrations
{
    [DbContext(typeof(WorkFlowDbContext))]
    [Migration("20251029130930_EditColumnName")]
    partial class EditColumnName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDGF.Core.Data.Entities.ReportEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("FileSizeKB")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoredFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("opt_Reports");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowDefinitionEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("opt_WorkflowDefinitions");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowHistoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PerformedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StepKey")
                        .HasColumnType("tinyint");

                    b.Property<int>("WorkflowInstanceId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WorkflowInstanceId");

                    b.ToTable("opt_WorkflowHistories");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowInstanceEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CurrentStepKey")
                        .HasColumnType("tinyint");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReportId");

                    b.HasIndex("WorkflowDefinitionId");

                    b.ToTable("opt_WorkflowInstances");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowStepEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AssignedRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PossibleActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StepKey")
                        .HasColumnType("tinyint");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WorkflowDefinitionId", "StepKey")
                        .IsUnique();

                    b.HasIndex("WorkflowDefinitionId", "StepOrder");

                    b.ToTable("opt_WorkflowSteps");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowTransitionEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromStepKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToStepKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WorkflowDefinitionId");

                    b.ToTable("opt_WorkflowTransitions");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowHistoryEntity", b =>
                {
                    b.HasOne("IDGF.Core.Data.Entities.WorkflowInstanceEntity", "WorkflowInstanceEntity")
                        .WithMany("WorkflowHistoryEntities")
                        .HasForeignKey("WorkflowInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowInstanceEntity");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowInstanceEntity", b =>
                {
                    b.HasOne("IDGF.Core.Data.Entities.ReportEntity", "ReportEntity")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IDGF.Core.Data.Entities.WorkflowDefinitionEntity", "WorkflowDefinitionEntity")
                        .WithMany()
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportEntity");

                    b.Navigation("WorkflowDefinitionEntity");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowStepEntity", b =>
                {
                    b.HasOne("IDGF.Core.Data.Entities.WorkflowDefinitionEntity", "WorkflowDefinitionEntity")
                        .WithMany("WorkflowStepEntities")
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowDefinitionEntity");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowTransitionEntity", b =>
                {
                    b.HasOne("IDGF.Core.Data.Entities.WorkflowDefinitionEntity", "WorkflowDefinitionEntity")
                        .WithMany("WorkflowTransitionEntities")
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowDefinitionEntity");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowDefinitionEntity", b =>
                {
                    b.Navigation("WorkflowStepEntities");

                    b.Navigation("WorkflowTransitionEntities");
                });

            modelBuilder.Entity("IDGF.Core.Data.Entities.WorkflowInstanceEntity", b =>
                {
                    b.Navigation("WorkflowHistoryEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
